{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\smart-onco2-main\\\\src\\\\components\\\\loginBody\\\\LoginBody.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../auth/authContext';\nimport { useForm } from '../../hooks/useForm';\nimport { types } from '../../types/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginBody = () => {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [formValues, handleInputChange] = useForm({\n    username: '',\n    password: ''\n  });\n  const {\n    username,\n    password\n  } = formValues;\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const url = 'http://localhost:5000/api/login';\n    const userData = {\n      username: username,\n      password: password\n    };\n    const response = await fetch(url, {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(userData),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.token) {\n      console.log(\"prueba\");\n      const action = {\n        type: types.login,\n        payload: {\n          username,\n          password\n        }\n      };\n      setError('');\n      dispatch(action);\n      const lastPath = localStorage.getItem('lastPath') || '/';\n      navigate(lastPath, {\n        replace: true\n      });\n    } else {\n      setError(data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"containerLoginInput\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"INICIAR SESI\\xD3N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textlogin\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Correo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Usuario\",\n        name: \"Username\",\n        value: username,\n        autoComplete: \"off\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textlogin\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        name: \"password\",\n        value: password,\n        autoComplete: \"off\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        name: \"button\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), error.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginBody, \"Bd0Wzc1bEFs98k9mZxBrm1ERwxY=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = LoginBody;\nexport default LoginBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginBody\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/smart-onco2-main/src/components/loginBody/LoginBody.jsx"],"names":["React","useContext","useState","useNavigate","AuthContext","useForm","types","LoginBody","dispatch","error","setError","navigate","formValues","handleInputChange","username","password","handleLogin","e","preventDefault","url","userData","response","fetch","method","body","JSON","stringify","headers","data","json","console","log","token","action","type","login","payload","lastPath","localStorage","getItem","replace","message","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/authContext'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { types } from '../../types/types'\r\n\r\nconst LoginBody = () => {\r\n    const { dispatch } = useContext(AuthContext)\r\n    const [error, setError] = useState('')\r\n    const navigate = useNavigate()\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const { username, password } = formValues\r\n\r\n    const handleLogin = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const url = 'http://localhost:5000/api/login';\r\n        const userData = {\r\n            username: username,\r\n            password: password\r\n        };\r\n\r\n        const response = await fetch(url, {\r\n            method: 'POST', // or 'PUT'\r\n            body: JSON.stringify(userData), // data can be `string` or {object}!\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await response.json()\r\n        console.log(data)\r\n\r\n        if (data.token) {\r\n            console.log(\"prueba\");\r\n            const action = {\r\n                type: types.login,\r\n                payload: {\r\n                    username,\r\n                    password\r\n                }\r\n            }\r\n            setError('')\r\n            dispatch(action)\r\n\r\n            const lastPath = localStorage.getItem('lastPath') || '/'\r\n\r\n            navigate(lastPath, {\r\n                replace: true\r\n            })\r\n        } else {\r\n            setError(data.message)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <form className='containerLoginInput' onSubmit={handleLogin}>\r\n\r\n\r\n                <h4>INICIAR SESIÃ“N</h4>\r\n\r\n                <div className='textlogin'><label htmlFor=\"\">Correo</label></div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Usuario'\r\n                    name='Username'\r\n                    value={username}\r\n                    autoComplete='off'\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n                <div className='textlogin'><label htmlFor=\"\">ContraseÃ±a</label></div>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder='ContraseÃ±a'\r\n                    name='password'\r\n                    value={password}\r\n                    autoComplete='off'\r\n                    onChange={handleInputChange}\r\n                />\r\n                <p>Â¿Olvidaste tu contraseÃ±a?</p>\r\n\r\n                <button className='button' type=\"submit\" name=\"button\">LOGIN</button>\r\n                {\r\n                    error.length > 0 &&\r\n                    <p>{error}</p>\r\n                }\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginBody\r\n"]},"metadata":{},"sourceType":"module"}